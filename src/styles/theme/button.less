//
// Component: Button
//
// ========================================================================

// Variables
// ========================================================================

@button-line-height: @global-control-height;
@button-small-line-height: @global-control-small-height;
@button-large-line-height: @global-control-large-height;

@button-font-size: @global-large-font-size; //@global-font-size;
@button-small-font-size: @global-small-font-size;
@button-large-font-size: @global-large-font-size; //@global-medium-font-size;

@button-padding-horizontal: @global-gutter;
@button-small-padding-horizontal: @global-small-gutter;
@button-large-padding-horizontal: @global-medium-gutter;

@button-default-background: transparent;
@button-default-color: @global-emphasis-color;
@button-default-hover-background: transparent;
@button-default-hover-color: @global-emphasis-color;
@button-default-active-background: transparent;
@button-default-active-color: @global-emphasis-color;

@button-primary-background: @global-primary-background;
@button-primary-color: @global-inverse-color;
@button-primary-hover-background: darken(@button-primary-background, 5%);
@button-primary-hover-color: @global-inverse-color;
@button-primary-active-background: darken(@button-primary-background, 10%);
@button-primary-active-color: @global-inverse-color;

@button-secondary-background: @global-secondary-background;
@button-secondary-color: @global-inverse-color;
@button-secondary-hover-background: darken(@button-secondary-background, 5%);
@button-secondary-hover-color: @global-inverse-color;
@button-secondary-active-background: darken(@button-secondary-background, 10%);
@button-secondary-active-color: @global-inverse-color;

@button-danger-background: @global-danger-background;
@button-danger-color: @global-inverse-color;
@button-danger-hover-background: darken(@button-danger-background, 5%);
@button-danger-hover-color: @global-inverse-color;
@button-danger-active-background: darken(@button-danger-background, 10%);
@button-danger-active-color: @global-inverse-color;

@button-disabled-background: @global-muted-background;
@button-disabled-color: @global-muted-color;

@button-text-line-height: @global-line-height;
@button-text-color: @global-muted-color;
@button-text-hover-color: @global-color;
@button-text-disabled-color: @global-muted-color;

@button-link-line-height: @global-line-height;
@button-link-color: @global-link-color;
@button-link-hover-color: @global-link-hover-color;
@button-link-hover-text-decoration: underline;
@button-link-disabled-color: @global-muted-color;

//
// New
//

@button-text-transform: none; // uppercase;

@button-border-width: @global-border-width;

@button-default-border: @global-primary-background;
@button-default-hover-border: @global-primary-background; //darken(@global-primary-background, 20%);
@button-default-active-border: @global-primary-background; //darken(@global-primary-background, 30%);

@button-disabled-border: @global-border;

@button-text-border-width: @global-border-width;
@button-text-border: @button-text-hover-color;

@inverse-button-primary-color: @global-inverse-color;
@inverse-button-primary-hover-color: @global-inverse-color;
@inverse-button-primary-active-color: @global-inverse-color;
// Component
// ========================================================================

.hook-button() {
  text-transform: @button-text-transform;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color, border-color;
  border-radius: 35px;
  line-height: 65px;
  font-weight: 700;
  white-space: nowrap;
}

.hook-button-hover() {
}

.hook-button-focus() {
}

.hook-button-active() {
}

// Style modifiers
// ========================================================================

.hook-button-default() {
  border: @button-border-width solid @button-default-border;
}

.hook-button-default-hover() {
  border-color: @button-default-hover-border;
}

.hook-button-default-active() {
  border-color: @button-default-active-border;
}

//
// Primary
//

.hook-button-primary() {
  border: none;
  background-image: linear-gradient(184deg, #ff0000, #f53b02);
  box-shadow: 0 0 17.6px 3.4px rgba(252, 18, 1, 0.17);
}

// @button-border-width solid transparent; }

.hook-button-primary-hover() {
  background-image: linear-gradient(184deg, darken(#ff0000, 5%), darken(#f53b02, 5%));
}

.hook-button-primary-active() {
  background-image: linear-gradient(184deg, darken(#ff0000, 10%), darken(#f53b02, 10%));
}

//
// Secondary
//

.hook-button-secondary() {
  border: @button-border-width solid transparent;
}

.hook-button-secondary-hover() {
}

.hook-button-secondary-active() {
}

//
// Danger
//

.hook-button-danger() {
  border: @button-border-width solid transparent;
}

.hook-button-danger-hover() {
}

.hook-button-danger-active() {
}

// Disabled
// ========================================================================

.hook-button-disabled() {
  border-color: @button-disabled-border;
}

// Size modifiers
// ========================================================================

.hook-button-small() {
}

.hook-button-large() {
}

// Text modifier
// ========================================================================

.hook-button-text() {

  position: relative;

  &::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 100%;
    border-bottom: @button-text-border-width solid @button-text-border;
    transition: right 0.3s ease-out;
  }

}

.hook-button-text-hover() {

  &::before {
    right: 0;
  }

}

.hook-button-text-disabled() {

  &::before {
    display: none;
  }

}

// Link modifier
// ========================================================================

.hook-button-link() {
}

// Miscellaneous
// ========================================================================

.hook-button-misc() {

  /* Group
   ========================================================================== */

  /*
   * Collapse border
   */

  .uk-button-group > .uk-button:nth-child(n+2),
  .uk-button-group > div:nth-child(n+2) .uk-button {
    margin-left: -@button-border-width;
  }

  /*
   * Create position context to superimpose the successor elements border
   * Known issue: If you use an `a` element as button and an icon inside,
   * the active state will not work if you click the icon inside the button
   * Workaround: Just use a `button` or `input` element as button
   */

  .uk-button-group .uk-button:hover,
  .uk-button-group .uk-button:focus,
  .uk-button-group .uk-button:active,
  .uk-button-group .uk-button.uk-active {
    position: relative;
    z-index: 1;
  }

}

// Inverse
// ========================================================================

@inverse-button-default-background: transparent;
@inverse-button-default-color: @inverse-global-emphasis-color;
@inverse-button-default-hover-background: transparent;
@inverse-button-default-hover-color: @inverse-global-emphasis-color;
@inverse-button-default-active-background: transparent;
@inverse-button-default-active-color: @inverse-global-emphasis-color;

@inverse-button-text-color: @inverse-global-emphasis-color;
@inverse-button-text-hover-color: @inverse-global-emphasis-color;

.hook-inverse-button-default() {
  border-color: @inverse-global-color;
}

.hook-inverse-button-default-hover() {
  border-color: @inverse-global-emphasis-color;
}

.hook-inverse-button-default-active() {
  border-color: @inverse-global-emphasis-color;
}

.hook-inverse-button-primary() {
}

.hook-inverse-button-primary-hover() {
}

.hook-inverse-button-primary-active() {
}

.hook-inverse-button-secondary() {
}

.hook-inverse-button-secondary-hover() {
}

.hook-inverse-button-secondary-active() {
}

.hook-inverse-button-text() {
  &::before {
    border-bottom-color: @inverse-global-emphasis-color;
  }
}

.hook-inverse-button-text-hover() {
}

.hook-inverse-button-text-disabled() {
}

.hook-inverse-button-link() {
}